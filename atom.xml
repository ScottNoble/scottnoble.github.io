<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Immersion Course in Ruby and Rails]]></title>
  <link href="http://ScottNoble.github.io/atom.xml" rel="self"/>
  <link href="http://ScottNoble.github.io/"/>
  <updated>2013-10-14T13:43:01-06:00</updated>
  <id>http://ScottNoble.github.io/</id>
  <author>
    <name><![CDATA[Scott Noble]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blog post #2]]></title>
    <link href="http://ScottNoble.github.io/blog/2013/10/09/blog-post-number-2/"/>
    <updated>2013-10-09T18:50:00-06:00</updated>
    <id>http://ScottNoble.github.io/blog/2013/10/09/blog-post-number-2</id>
    <content type="html"><![CDATA[<p>my second blog post</p>

<p>To make this post using octopress, I first loaded my octopress directory.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/workspace/octopress</span></code></pre></td></tr></table></div></figure>


<p>Then I created a new post with the command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["Blog post #2"]</span></code></pre></td></tr></table></div></figure>


<p>I opened the blog post in RubyMine with iterm by giving the command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mine .</span></code></pre></td></tr></table></div></figure>


<p>I then ran the rake commands to generate and preview the post:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake watch
</span><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>This allowed me to load and preview my post on my local server with the address
&ldquo;<a href="http:\localhost:4000">http:\localhost:4000</a>&rdquo;</p>

<p>The next step was to rerun rake generate (I don&rsquo;t know if this step is necessary)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<p>Finally, I ran rake deploy to load this post to my github repository.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My first post]]></title>
    <link href="http://ScottNoble.github.io/blog/2013/10/07/my-first-post/"/>
    <updated>2013-10-07T20:34:00-06:00</updated>
    <id>http://ScottNoble.github.io/blog/2013/10/07/my-first-post</id>
    <content type="html"><![CDATA[<p>this is my first blog post</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo make_me_a_sandwich</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Cat class</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Cat</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">speak</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Meow&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<div><script src='https://gist.github.com/6878737.js'></script>
<noscript><pre><code>class Horse
  def speak
    &quot;Neighhhhh&quot;
  end
end</code></pre></noscript></div>




<div><script src='https://gist.github.com/66365.js'></script>
<noscript><pre><code>ls
</code></pre></noscript></div>


<p>a random biology gist</p>

<div><script src='https://gist.github.com/237003.js'></script>
<noscript><pre><code>#!/usr/bin/env ruby -wKU

# Author::    SÃ©bastien Briois (mailto:sebriois@gmail.com)

require &quot;rubygems&quot;
require &quot;rest_client&quot;
require &quot;json&quot;

IDCC_SITE = &quot;http://user:password@localhost:3000&quot;

# Generic helper method for handling the web calls to the repository.
def request(method, url, data = nil, datatype = &quot;application/json&quot;, repository = IDCC_SITE)
  resource = RestClient::Resource.new( repository )
  
  response =
    case method.upcase
    when &quot;GET&quot;    then resource[url].get
    when &quot;POST&quot;   then resource[url].post data, :content_type =&gt; datatype
    when &quot;PUT&quot;    then resource[url].put  data, :content_type =&gt; datatype
    when &quot;DELETE&quot; then resource[url].delete
    else
      raise &quot;Method #{method} unknown when requesting url #{url}&quot;
    end
  
  puts &quot;#{method} #{url} - #{response.code} #{RestClient::STATUSES[response.code]}&quot;
  return response.body
end


##
## Scenario 1: search and update an allele
##

allele = {
  :pipeline_id        =&gt; 1,
  :mgi_accession_id   =&gt; &#39;MGI:123456&#39;,
  :project_design_id  =&gt; 1,
  :cassette           =&gt; &#39;L1L2_gt2&#39;,
  :backbone           =&gt; &#39;L3L4_pZero_kan&#39;,
  :assembly           =&gt; &#39;NCBIM37&#39;,
  :chromosome         =&gt; &#39;11&#39;,
  :strand             =&gt; &#39;+&#39;,
  :design_type        =&gt; &#39;Knock Out&#39;,
  :design_subtype     =&gt; &#39;Frameshift&#39;,
  :homology_arm_start =&gt; 10,
  :homology_arm_end   =&gt; 10000,
  :cassette_start     =&gt; 50,
  :cassette_end       =&gt; 500,
  :loxp_start         =&gt; 1000,
  :loxp_end           =&gt; 1500
}

# Let&#39;s search for this allele using discriminating attributes
search_params = &quot;mgi_accession_id=#{allele[&#39;mgi_accession_id&#39;]}&quot;
search_params += &quot;&amp;project_design_id=#{allele[&#39;project_design_id&#39;]}&quot;
# etc.

response = request( &#39;GET&#39;, &quot;alleles.json?#{search_params}&quot; )
alleles_found = JSON.parse( response ) # Returns a list of matches

# NOTE:
# The alleles_found might hold more than one allele in which case the
# search (above) could be run again with more details.

if alleles_found
  # We now want to update our allele.
  allele_found = alleles_found[0]
  allele_json  = JSON.generate( {:molecular_structure =&gt; allele} )
  request( &#39;PUT&#39;, &quot;alleles/#{allele_found[&#39;id&#39;]}&quot;, allele_json )
else
  # No allele has been found, let&#39;s create our allele from the Hash we&#39;ve made
  allele_json = JSON.generate( {:molecular_structure =&gt; allele} )
  response = request( &#39;POST&#39;, &#39;alleles&#39;, allele_json )
  allele = JSON.parse( response )
  
  # In this example we&#39;ll DELETE the created allele
  request( &#39;DELETE&#39;, &quot;alleles/#{allele[&#39;id&#39;]}&quot;)
end

##
##  Scenario 2: Create an allele and all its products in a single request
##        /!\ This trick will not work for an UPDATE.
##

allele_and_products = {
  :pipeline_id        =&gt; 1,
  :mgi_accession_id   =&gt; &quot;MGI:456789&quot;,
  :project_design_id  =&gt; 2,
  :cassette           =&gt; &quot;L1L2_gt2&quot;,
  :backbone           =&gt; &quot;L3L4_pZero_kan&quot;,
  :assembly           =&gt; &quot;NCBIM37&quot;,
  :chromosome         =&gt; &quot;1&quot;,
  :strand             =&gt; &quot;+&quot;,
  :design_type        =&gt; &quot;Knock Out&quot;,
  :design_subtype     =&gt; &quot;Frameshift&quot;,
  :homology_arm_start =&gt; 10,
  :homology_arm_end   =&gt; 10000,
  :cassette_start     =&gt; 50,
  :cassette_end       =&gt; 500,
  :loxp_start         =&gt; 1000,
  :loxp_end           =&gt; 1500,
  :targeting_vectors  =&gt; [
    {
      :name                =&gt; &#39;PRPGD001&#39;,
      :intermediate_vector =&gt; &#39;PGS001&#39;,
      :ikmc_project_id     =&gt; 1,
      :es_cells            =&gt; [
        { :name =&gt; &#39;EPD001&#39; },
        { :name =&gt; &#39;EPD002&#39; },
        { :name =&gt; &#39;EPD003&#39; },
      ]
    },
    {
      :name                =&gt; &#39;PRPGD002&#39;,
      :intermediate_vector =&gt; &#39;PGS001&#39;,
      :ikmc_project_id     =&gt; 1,
      :es_cells            =&gt; [
        { :name =&gt; &#39;EPD004&#39; },
        { :name =&gt; &#39;EPD005&#39; },
        { :name =&gt; &#39;EPD006&#39; },
      ]
    }
  ],
  :genbank_file =&gt; { 
    :escell_clone     =&gt; &quot;A GENBANK FILE IN PLAIN TEXT&quot;,
    :targeting_vector =&gt; &quot;A GENBANK FILE IN PLAIN TEXT&quot;
  }
}
allele_json = JSON.generate( {:molecular_structure =&gt; allele_and_products} )
response    = request( &#39;POST&#39;, &#39;alleles.json&#39;, allele_json )
allele      = JSON.parse( response )

# DELETE everything
allele[&#39;es_cells&#39;].each do |es_cell|
  request( &#39;DELETE&#39;, &quot;es_cells/#{es_cell[&#39;id&#39;]}&quot; )
end

allele[&#39;targeting_vectors&#39;].each do |targ_vec|
  request( &#39;DELETE&#39;, &quot;targeting_vectors/#{targ_vec[&#39;id&#39;]}&quot; )
end

request( &#39;DELETE&#39;, &quot;alleles/#{allele[&#39;id&#39;]}&quot; )</code></pre></noscript></div>



]]></content>
  </entry>
  
</feed>
